/* Generated By:JavaCC: Do not edit this line. clikeConstants.java */
package traductor;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface clikeConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int mLETTER = 5;
  /** RegularExpression Id. */
  int MLETTER = 6;
  /** RegularExpression Id. */
  int LETTER = 7;
  /** RegularExpression Id. */
  int DIGIT = 8;
  /** RegularExpression Id. */
  int NUMBER = 9;
  /** RegularExpression Id. */
  int IDCHAR = 10;
  /** RegularExpression Id. */
  int tIBLOQUE = 11;
  /** RegularExpression Id. */
  int tFBLOQUE = 12;
  /** RegularExpression Id. */
  int tAP = 13;
  /** RegularExpression Id. */
  int tCP = 14;
  /** RegularExpression Id. */
  int tACOR = 15;
  /** RegularExpression Id. */
  int tCCOR = 16;
  /** RegularExpression Id. */
  int tREFER = 17;
  /** RegularExpression Id. */
  int tPC = 18;
  /** RegularExpression Id. */
  int tASSIGN = 19;
  /** RegularExpression Id. */
  int tMAS = 20;
  /** RegularExpression Id. */
  int tMENOS = 21;
  /** RegularExpression Id. */
  int tPROD = 22;
  /** RegularExpression Id. */
  int tDIV = 23;
  /** RegularExpression Id. */
  int tMOD = 24;
  /** RegularExpression Id. */
  int tMEN = 25;
  /** RegularExpression Id. */
  int tMAY = 26;
  /** RegularExpression Id. */
  int tMENI = 27;
  /** RegularExpression Id. */
  int tMAYI = 28;
  /** RegularExpression Id. */
  int tDIF = 29;
  /** RegularExpression Id. */
  int tIG = 30;
  /** RegularExpression Id. */
  int tOR = 31;
  /** RegularExpression Id. */
  int tAND = 32;
  /** RegularExpression Id. */
  int tNOT = 33;
  /** RegularExpression Id. */
  int tWHILE = 34;
  /** RegularExpression Id. */
  int tIF = 35;
  /** RegularExpression Id. */
  int tELSE = 36;
  /** RegularExpression Id. */
  int tBOOL = 37;
  /** RegularExpression Id. */
  int tCHAR = 38;
  /** RegularExpression Id. */
  int tINT = 39;
  /** RegularExpression Id. */
  int tFALSE = 40;
  /** RegularExpression Id. */
  int tTRUE = 41;
  /** RegularExpression Id. */
  int tVOID = 42;
  /** RegularExpression Id. */
  int tPRINT = 43;
  /** RegularExpression Id. */
  int tPRINTLN = 44;
  /** RegularExpression Id. */
  int tREAD = 45;
  /** RegularExpression Id. */
  int tREADLN = 46;
  /** RegularExpression Id. */
  int tRETURN = 47;
  /** RegularExpression Id. */
  int tMAIN = 48;
  /** RegularExpression Id. */
  int tINT2CHAR = 49;
  /** RegularExpression Id. */
  int tCHAR2INT = 50;
  /** RegularExpression Id. */
  int tCONST_STRING = 51;
  /** RegularExpression Id. */
  int tCOMMA = 52;
  /** RegularExpression Id. */
  int tCONST_INT = 53;
  /** RegularExpression Id. */
  int tCONST_CHAR = 54;
  /** RegularExpression Id. */
  int tID = 55;
  /** RegularExpression Id. */
  int tBASURA = 56;
  /** RegularExpression Id. */
  int tCOMM = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<mLETTER>",
    "<MLETTER>",
    "<LETTER>",
    "<DIGIT>",
    "<NUMBER>",
    "<IDCHAR>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"&\"",
    "\";\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"==\"",
    "\"||\"",
    "\"&&\"",
    "\"!\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"bool\"",
    "\"char\"",
    "\"int\"",
    "\"false\"",
    "\"true\"",
    "\"void\"",
    "\"print\"",
    "\"print_ln\"",
    "\"read\"",
    "\"read_ln\"",
    "\"return\"",
    "\"main\"",
    "\"int2char\"",
    "\"char2int\"",
    "<tCONST_STRING>",
    "\",\"",
    "<tCONST_INT>",
    "<tCONST_CHAR>",
    "<tID>",
    "<tBASURA>",
    "<tCOMM>",
  };

}
